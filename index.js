// index.js ‚Äî wersja z prostymi komendami testowymi (ping, help)
// Odpowiadamy TwiML-em, wiƒôc wychodzi TYLKO jedna wiadomo≈õƒá z webhooka.

const express = require('express');
const bodyParser = require('body-parser');
const twilio = require('twilio');

const app = express();

// Twilio wysy≈Ça webhook jako application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({ extended: false }));

// Healthcheck ‚Äî po wej≈õciu w URL poka≈ºe, ≈ºe serwer ≈ºyje
app.get('/', (req, res) => {
  res.send('WhatsApp Nudge Assistant dzia≈Ça üöÄ');
});

// G≈Å√ìWNY WEBHOOK DLA WHATSAPP
app.post('/webhooks/whatsapp', (req, res) => {
  const raw = req.body.Body || '';
  const text = raw.trim().toLowerCase();
  const from = req.body.From || '';
  console.log(`[IN] ${from}: ${raw}`);

  const twiml = new twilio.twiml.MessagingResponse();

  // ‚úÖ Szybkie komendy do test√≥w
  if (text === 'ping') {
    twiml.message('pong ‚úÖ');
  } else if (text === 'help' || text === 'komendy') {
    twiml.message('Komendy: ping, help\nPoza tym odpisujƒô: BOT: dziƒôki, zapisa≈Çem -> "..."');
  } else {
    // Domy≈õlna odpowied≈∫ (echo)
    twiml.message(`BOT: dziƒôki, zapisa≈Çem -> "${raw}"`);
  }

  // Odpowiadamy TwiML-em ‚Äî to jest JEDYNA odpowied≈∫
  res.type('text/xml').send(twiml.toString());
});

// Port dostarczany przez Railway (lokalnie 8080)
const port = process.env.PORT || 8080;
app.listen(port, () => console.log(`Serwer dzia≈Ça na porcie ${port}`));
